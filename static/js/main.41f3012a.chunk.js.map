{"version":3,"sources":["App.tsx","components/HomePage.tsx","components/ErrorPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","isPageActive","isActive","classNames","className","role","to","HomePage","ErrorPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","PeopleTable","people","peopleSlug","useParams","map","born","died","motherName","mother","fatherName","father","undefined","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","isDataEmpty","useMemo","length","isDataPrepared","useEffect","find","preparePeople","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.41f3012a.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  const isPageActive = ({ isActive }: { isActive: boolean }) => {\n    return classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={isPageActive}>Home</NavLink>\n            <NavLink to=\"/people\" className={isPageActive}>People</NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const ErrorPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { peopleSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            mother,\n            fatherName,\n            father,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === peopleSlug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother !== undefined\n                  ? <PersonLink person={mother} />\n                  : motherName}\n              </td>\n              <td>\n                {father !== undefined\n                  ? <PersonLink person={father} />\n                  : fatherName}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nconst preparePeople = (people: Person[]): Person[] => {\n  return people.map((person) => {\n    return {\n      ...person,\n      motherName: person.motherName || '-',\n      fatherName: person.fatherName || '-',\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isDataEmpty = useMemo(() => {\n    return !isError && !isLoading && people.length === 0;\n  }, [isLoading, isError, people]);\n\n  const isDataPrepared = useMemo(() => {\n    return !isError && !isLoading && people.length > 0;\n  }, [isLoading, isError, people]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then((response) => setPeople(preparePeople(response)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isDataEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isDataPrepared && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { ErrorPage } from './components/ErrorPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<ErrorPage />} />\n\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":peopleSlug\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}